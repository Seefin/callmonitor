const path = require('path');
const fs = require('fs');

//We build the Content-Type header by parsing the extension and then passing in the 
// appropriate MIME type from the dict below.
const mimeTypes = {
	'.ico': 'image/x-icon',
	'.html': 'text/html',
	'.js': 'text/javascript',
	'.json': 'application/json',
	'.css': 'text/css',
	'.jpg': 'image/jpeg',
	'.wav': 'audio/wav',
	'.mp3': 'audio/mpeg',
	'.svg': 'image/svg+xml',
	'.pdf': 'application/pdf',
	'.doc': 'application/msword'
};

function serveStaticFile(filename, res){
	//Append filename to static content path.
	// UNSAFE - assumes this has been sanitzed first - UNSAFE
	// see: https://en.wikipedia.org/wiki/Directory_traversal_attack
	let pathname = path.join(__dirname, '../www');
	pathname = pathname + filename;

	fs.exists(pathname, function(exists){
			if(exists) {
			//Check this is not a directory. If it is, serve index.html
			if(fs.statSync(pathname).isDirectory()){
			pathname += '/index.html';
			} else {
			//Serve the requested page
			fs.readFile(pathname, function (err, data){
					if(err){
					//internal Server Error
					res.statusCode = 500;
					res.end(`Error retrieving file: ${err}`);
					} else {
					//Extract file extension
					const ext = path.parse(pathname).ext;
					//Set Content type, and send
					res.setHeader('Content-Type', mimeTypes[ext] || 'text/html');
					res.end(data);
					}
					});
			}
			} else {
				res.statusCode = 404;
				res.end(`File ${pathname} not found!`);
			}
	}); 
	console.log(pathname);
}

exports.serve = serveStaticFile;
