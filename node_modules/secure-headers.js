function secureHeaders(res, req){
	//Turn on HSTS
	res.setHeader('Strict-Transport-Security', 'max-age=63072000; includeSubDomains; preload');
	//Set the X-XSS-Protection header.
	const headerValue = oldIEUserAgent(req.headers['user-agent']) ? '0' : '1; mode=block';
	res.setHeader('X-XSS-Protection', headerValue);
	//Cache basically nothing - removes some functionality
	res.setHeader('Surrogate-Control', 'no-store');
	res.setHeader('Cache-Control', 'no-store, no-cache, must-revalidate, proxy-revalidate');
	res.setHeader('Pragma', 'no-cache');
	res.setHeader('Expires', '0');
	//Don't allow MIME type sniffing attacks
	res.setHeader('X-Content-Type-Options', 'nosniff');
	//Help prevent clickjacking via frames
	res.setHeader('X-Frame-Options','SAMEORIGIN');
	//Stop DNS prefetch - we like privacy!
	res.setHeader('X-DNS-Prefetch-Control', 'off');
	//Stop older IE from running untrusted HTML in our site context
	res.setHeader('X-Download-Options','noopen');
	//Set content Security Policy
	res.setHeader('Content-Security-Policy', "default-src 'self' *.connorfindlay.com https://apis.google.com; img-src *");
	//Set referrer policy to same-origin - more privacy!
	res.setHeader('Referrer-Policy', 'same-origin');
	//Set Certificate Transparency
	res.setHeader('Expect-CT','enforce, max-age=30');
	//Set features supported by this site
	res.setHeader('Feature-Policy',"fullscreen *; payment 'none'"); 
	//Return response object with all headers set
	return res;
}

/**Detect old IE (IE <9) User agent.
 * IE 8 has a flaw in the XSS prevention code that actually allows an XSS injection.
 * Setting the X-XSS-Protection header to 0 turns this code off, preventing the injection. */
function oldIEUserAgent(agent){
	if(!agent){
		return false; //No User-Agent string passed.
	}

	const matches = /msie\s*(\d{1,2})/i.exec(agent)
		return matches ? parseFloat(matches[1]) < 9 : false;
}

exports.headers = secureHeaders
